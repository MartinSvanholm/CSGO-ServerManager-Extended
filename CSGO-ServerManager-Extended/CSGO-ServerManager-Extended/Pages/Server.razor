@page "/server"
@inject ICsgoServerService _csgoServerService
@inject ISnackbar _snackbar;

@if(CsgoServer != null) {
    <ServerComponent Server="CsgoServer" OnServerChange="(ICsgoServer tempServer) => OnServerChanged(tempServer)">
        <ServerHeader>
            <StandardServerHeader Server="CsgoServer" StartStopServer="(async () => await StartStopServer())" IconData="@iconData"/>
        </ServerHeader>
    </ServerComponent>
}

@code {
    [Parameter, SupplyParameterFromQuery]
    public string ServerId { get; set; }

    [Parameter, SupplyParameterFromQuery]
    public string ServerType { get; set; }

    private ICsgoServer CsgoServer { get; set; }

    private IconData iconData { get; set; } = new();

    string toggleBtnIcon = "";
    MudBlazor.Color toggleBtnIconColor;
    bool serverHasBeenStarted = false;

    Snackbar snackbar;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if(ServerType == CsgoServerConstants.NormalCsgoServerType)
            {
                CsgoServer = await _csgoServerService.GetCsgoServerById(ServerId);
            } 
            else
            {
                CsgoServer = await _csgoServerService.GetDatHostServer(ServerId);
            }                
        }
        catch (Exception e)
        {
            _snackbar.Add(e.Message);
        }

        changeToggleBtnIconAndColor();
    }

    private async Task StartStopServer()
    {
        if (!CsgoServer.IsOn)
        {
            snackbar = _snackbar.Add("Starting server", Severity.Normal);
            serverHasBeenStarted = true;
        }
        else
        {
            snackbar = _snackbar.Add("Stopping server", Severity.Normal);
            serverHasBeenStarted = false;
        }

        try
        {
            await _csgoServerService.StartStopServer(CsgoServer);
        }
        catch (Exception e)
        {
            _snackbar.Add(e.Message, Severity.Error);
        }

        if (snackbar is not null)
            _snackbar.Remove(snackbar);

        if (CsgoServer.Booting)
            snackbar = _snackbar.Add("Server booting", Severity.Normal);
        else
            snackbar = _snackbar.Add("Server offline", Severity.Normal);

        changeToggleBtnIconAndColor();

        StateHasChanged();
    }

    private void OnServerChanged(ICsgoServer csgoServer)
    {
        CsgoServer = csgoServer;
        changeToggleBtnIconAndColor();

        if (serverHasBeenStarted && snackbar is not null && CsgoServer.Booting == false)
        {
            _snackbar.Remove(snackbar);
            snackbar = _snackbar.Add("Server online", Severity.Success);
            serverHasBeenStarted = false;
        }
        StateHasChanged();
    }

    private void changeToggleBtnIconAndColor()
    {
        if (CsgoServer.Booting)
        {
            iconData.Icon = Icons.Filled.Refresh;
            iconData.IconColor = Color.Info;
            iconData.IconAnimationClass = "toggle-btn-spin";
        } 
        else if (CsgoServer.IsOn)
        {
            iconData.Icon = Icons.Filled.Stop;
            iconData.IconColor = Color.Error;
            iconData.IconAnimationClass = "";
        } 
        else
        {
            iconData.Icon = Icons.Filled.NotStarted;
            iconData.IconColor = Color.Success;
            iconData.IconAnimationClass = "";
        }
    }
}