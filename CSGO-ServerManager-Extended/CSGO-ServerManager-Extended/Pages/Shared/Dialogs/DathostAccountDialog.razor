<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Your Dathost account</MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="dathostAccount.Email" Immediate=true T="string" Label="Email Address"/>
        <MudTextField @bind-Value="dathostAccount.Password" Immediate=true T="string" Label="Password" InputType="InputType.Password"/>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton OnClick="(async ()=> await Submit())" Color="Color.Success" Variant="Variant.Filled" Size="Size.Medium">Connect</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance mudDialog { get; set; }

    [Inject]
    ISettingsService settingsService { get; set; }

    [Inject]
    ISnackbar snackbar { get; set; }

    private DathostAccount dathostAccount { get; set; }

    private async Task Submit()
    {
        try
        {
            dathostAccount = await settingsService.AddDathostAccount(dathostAccount);
            snackbar.Add("Dathost account linked", Severity.Success, config => { config.Onclick = snackbar => { return Task.CompletedTask; }; });
            mudDialog.Close(DialogResult.Ok(dathostAccount));
        }
        catch (Exception e)
        {
            snackbar.Add(e.Message, Severity.Error, config => { config.Onclick = snackbar => { return Task.CompletedTask; }; });
            Cancel();
        }
    }

    private void Cancel()
    {
        mudDialog.Cancel();
    }
}